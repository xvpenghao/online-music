swagger: "2.0"
info: {}
basePath: v1
paths:
  /index/errorUI:
    get:
      tags:
      - index
      description: 错误页面
      operationId: IndexController.ErrorUI
      responses:
        exec:
          description: error
  /index/indexUI:
    get:
      tags:
      - index
      description: 首页页面
      operationId: IndexController.IndexUI
      responses:
        exec:
          description: error
  /login/:
    post:
      tags:
      - login
      description: 登录
      operationId: LoginController.LoginIn
  /login/loginOut:
    get:
      tags:
      - login
      description: 退出登录
      operationId: LoginController.LoginOut
  /login/loginUI:
    get:
      tags:
      - login
      description: 登录UI
      operationId: LoginController.LoginUI
  /song/querySongDetail/{songID}:
    get:
      tags:
      - song
      description: 查询歌曲详情
      operationId: SongController.QuerySongDetail
      parameters:
      - in: path
        name: songId
        description: 歌曲ID
        required: true
        type: string
      responses:
        exec:
          description: error
        info:
          description: true "返回歌曲相应信息"
          schema:
            $ref: '#/definitions/models.QuerySongDetailResp'
  /songCover/createSongCover:
    post:
      tags:
      - songCover
      description: 创建歌单
      operationId: SongCoverController.CreateSongCover
      parameters:
      - in: body
        name: info
        description: req
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongCoverReq'
      responses:
        exec:
          description: error
  /songCover/querySongCoverList:
    get:
      tags:
      - songCover
      description: 查询歌单列表
      operationId: SongCoverController.SongBestCoverUI
      parameters:
      - in: query
        name: channelId
        description: 来源渠道id 如网易，qq
        required: true
        type: string
      - in: query
        name: curPage
        description: 当前页
        required: true
        type: integer
        format: int64
      responses:
        exec:
          description: error
  /songCover/querySongList:
    get:
      tags:
      - songCover
      description: 根据歌单id获取歌曲列表
      operationId: SongCoverController.QuerySongList
      parameters:
      - in: query
        name: channelId
        description: 渠道id
        required: true
        type: string
      - in: query
        name: songCoverId
        description: 歌单id
        required: true
        type: string
      - in: query
        name: coverImgUrl
        description: 歌单图片id
        required: true
        type: string
      - in: query
        name: description
        description: 歌单描述
        required: true
        type: string
      responses:
        exec:
          description: error
  /user/createUser:
    post:
      tags:
      - user
      description: 添加用户
      operationId: UserController.CreateUser
  /user/modifyPwd:
    post:
      tags:
      - user
      description: 修改密码
      operationId: UserController.ModifyPwd
  /user/modifyPwdUI:
    get:
      tags:
      - user
      description: 修改密码UI
      operationId: UserController.ModifyPwdUI
  /user/modifyUser:
    post:
      tags:
      - user
      description: 修改用户
      operationId: UserController.ModifyUser
  /user/registerUI:
    get:
      tags:
      - user
      description: 注册页面
      operationId: UserController.RegisterUI
  /user/userDetailUI:
    get:
      tags:
      - user
      description: 用户基本信息
      operationId: UserController.UserDetailUI
definitions:
  models.CreateSongCoverReq:
    title: CreateSongCoverReq
    type: object
    properties:
      SongCoverName:
        type: string
  models.QuerySongDetailResp:
    title: QuerySongDetailResp
    type: object
    properties:
      Singer:
        type: string
      SongAlbum:
        type: string
      SongCoverUrl:
        type: string
      SongId:
        type: string
      SongLyric:
        type: string
      SongName:
        type: string
      SongPlayUrl:
        type: string
  models.Song:
    title: Song
    type: object
    properties:
      singer:
        type: string
      songAlbum:
        type: string
      songCoverUrl:
        type: string
      songId:
        type: string
      songLyric:
        type: string
      songName:
        type: string
      songPlayUrl:
        type: string
